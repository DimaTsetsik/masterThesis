@using System.Collections.Generic;
@using FFilms.Models;
@model BooksViewModel

@{
    ViewBag.Title = "GetBooksByName";
}


<h2>@Model.BooksModels.totalItems</h2>
<h3>to eng @(Model.BooksModels.totalItems - Model.CurrentPage * 20) <h3>

        @using (Html.BeginForm("GetBooksByName", "Books"))
        {
            <input type="text" name="bookName" />
            <button type="submit"> Пошук</button>

        }

        @if (Model.BooksModels.items != null && Model.BooksModels.items.Any())
        {
            foreach (var item in Model.BooksModels.items)
            {
            
                <div class="col-md-3">
                    <a href="@(item.accessInfo?.webReaderLink ?? "")" target="_blank">
                        <img src="@(item.volumeInfo?.imageLinks?.thumbnail ?? "")" width="150px" height="200px"><br>
                    </a>
                    <p>@(item.volumeInfo?.title ?? "")</p>
                    <div>
                    </div>
                </div>
  
            }
        }

                @*<nav aria-label="Page navigation example">
                    <ul class="pagination">

                        <li class="page-item">
                            <a href="@Url.Action("GetBooksByName", "Books", new { bookName = Model.BookName, page = Model.CurrentPage - 1  }, Request.Url.Scheme)">
                                <span>Previous</span>
                            </a>
                        </li>
                        <li class="page-item">
                            <a href="@Url.Action("GetBooksByName", "Books", new { bookName = Model.BookName, page = 2  }, Request.Url.Scheme)">
                                <span>1</span>
                            </a>
                        </li>
                        @if (Model.CurrentPage > 2)
                        {
                            for (int ppage = Model.CurrentPage; ppage >= Model.CurrentPage - 3; ppage--)
                            {
                                <li class="page-item"><a class="page-link" href="@Url.Action("GetBooksByName", "Books", new { bookName = Model.BookName, page = ppage  }, Request.Url.Scheme)">@ppage</a></li>
                            }
                        }
                        <li class="page-item active"><a class="page-link" href="@Url.Action("GetBooksByName", "Books", new { bookName = Model.BookName, page = 2  }, Request.Url.Scheme)">@Model.CurrentPage</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item">
                            <a href="@Url.Action("GetBooksByName", "Books", new { bookName = Model.BookName, page = Model.CurrentPage + 1  }, Request.Url.Scheme)">
                                <span>Next</span>
                            </a>
                        </li>
                    </ul>*@

                    @if (Model.Pager.EndPage > 1)
                    {
                        <ul class="pagination">
                            @if (Model.Pager.CurrentPage > 1)
                            {
                                <li>
                                    <a href="@Url.Action("GetBooksByName", "Books", new { bookName = Model.BookName, page = 1  }, Request.Url.Scheme)">First</a>
                                </li>
                                <li>
                                    <a href="@Url.Action("GetBooksByName", "Books", new { bookName = Model.BookName, page = Model.Pager.CurrentPage - 1  }, Request.Url.Scheme)">Previous</a>
                                </li>
                            }

                            @for (var cpage = Model.Pager.StartPage; cpage <= Model.Pager.EndPage; cpage++)
                            {
                                <li class="@(cpage == Model.Pager.CurrentPage ? "active" : "")">
                                    <a href="@Url.Action("GetBooksByName", "Books", new { bookName = Model.BookName, page = cpage }, Request.Url.Scheme)">@cpage</a>
                                </li>
                            }

                            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                            {
                                <li>
                                    <a href="@Url.Action("GetBooksByName", "Books", new { bookName = Model.BookName, page = Model.Pager.CurrentPage + 1  }, Request.Url.Scheme)">Next</a>
                                </li>
                                <li>
                                    
                                    <a href="@Url.Action("GetBooksByName", "Books", new { bookName = Model.BookName, page = Model.Pager.TotalPages }, Request.Url.Scheme)">Last</a>
                                </li>
                            }
                        </ul>
                    }

                </nav>
